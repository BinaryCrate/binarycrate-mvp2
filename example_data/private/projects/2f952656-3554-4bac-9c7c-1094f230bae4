from __future__ import unicode_literals, absolute_import, print_function

def CreateDefaultStartBoard():
    return CreateBoard(
        [['','W','','W','','W','','W'],
         ['W','','W','','W','','W',''],
         ['','W','','W','','W','','W'],
         ['','','','','','','',''],
         ['','','','','','','',''],
         ['B','','B','','B','','B',''],
         ['','B','','B','','B','','B'],
         ['B','','B','','B','','B',''],
        ])

def CreateBoard(ll):
    # ll = a list of 8 lists. Each of those lists consists of 8 strings:
    # Blank = no piece "W" or "B" = white or black pawn
    # "WK" or "BK" = white or black king
    assert type(ll) == list
    assert len(ll) == 8
    pieces = dict()
    y = 0
    for l in ll:
        assert type(l) == list
        assert len(l) == 8
        x = 0
        for s in l:
            assert isinstance(s, basestring)
            assert s in {"W", "B", "WK", "BK", ""}
            #assert s == "" or self.GetSquareColour(x, y) == "B"
            if s != "":
                pieces[(x, y)] = s
            x = x + 1
        y = y + 1
    return pieces
