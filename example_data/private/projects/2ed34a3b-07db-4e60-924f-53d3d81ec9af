from __future__ import unicode_literals, absolute_import, print_function
from binarycrate.controls import Form

MISSILE_SPEED = 10

class Main(Form):
    file_location = __file__

    class Missile(object):
        def __init__(self, x, y, screen_object):
            self.x = x
            self.y = y
            self.screen_object = screen_object

    def __init__(self, *args, **kwargs):
        super(Main, self).__init__(*args, **kwargs)
        self.missiles = []
        self.set_interval(self.interval_10, 10)
        self.ufo_x = None
        self.ufo_y = None

    def on_body_mousemove(self, x, y):
        self.ufo_x = x - self.imgufo.width / 2
        self.ufo_y = y - self.imgufo.height / 2
    
    def on_body_click(self):
        from binarycrate.controls.bcform import Circle
        x = self.imgufo.x + self.imgufo.width / 2
        y = self.imgufo.y
        screen_object = Circle({'width': 6,
             'height': 6,
             'x': x - 3,
             'y': y - 3,
             'name': 'circle',
             'stroke_width': 1,
             'stroke': 'rgb(255,0,0)',
             'fill': 'rgb(255,0,0)',
             'visible': True})

        m = Main.Missile(x, y, screen_object)
        
        self.missiles.append(m)
        self.add_control(screen_object)
    
    def interval_10(self):
        for m in self.missiles:
            if m.y < MISSILE_SPEED:
                self.missiles.remove(m)
                self.remove_dynamic_control(m.screen_object)
            else:
                m.y -= MISSILE_SPEED
                m.screen_object.y = m.y - 3
        
        if self.ufo_x is not None:
            self.imgufo.x = self.ufo_x
            self.imgufo.y = self.ufo_y
            
